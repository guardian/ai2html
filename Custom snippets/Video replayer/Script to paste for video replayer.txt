ai2html-js
<script>

	var startDate = "23/03/1969"; // DD/MM/YYYY
	var startTime = "00:00:00";

	var endDate = "24/03/1969"; // DD/MM/YYYY
	var endTime = "00:00:00";

	var showDay = true;
	var showDate = true;
	var showMonth = true;
	var showYear = true;
	var showHours = true;
	var showMinutes = true;
	var showSeconds = false;
	var hour12 = true;

	var startDateArr = startDate.split("/");
	var endDateArr = endDate.split("/");


	var startDateUTC = new Date(startDateArr[2] + "-" + startDateArr[1] + "-" + startDateArr[0] + "T" + startTime);
	var endDateUTC = new Date(endDateArr[2] + "-" + endDateArr[1] + "-" + endDateArr[0] + "T" + endTime);

	var timeDifference = endDateUTC.getTime() - startDateUTC.getTime();
	
	var position = "top left";  // top or bottom, left, centre or right

	var positionArr = position.split(" ");
	var ai2htmlEl = document.querySelector(".ai2html");
	var mainGraphic = document.querySelector(".gv-graphic-main");
	var videos = [].slice.apply(document.querySelectorAll("video"));

	var currentVideo = null;
	var isPlaying = true;
	
	var options = {};

	if (showDay) {
			options.weekday = "long";
		}
		if (showDate) {
			options.day = "numeric";
		}

		if (showMonth) {
			options.month = "long";
		}
		if (showYear) {
			options.year = "numeric";
		}
		if (showHours) {
			options.hour = "numeric" // "2-digit"
		}
		if (showMinutes) {
			options.minute = "numeric" // "2-digit"
		}
	
		if (showSeconds) {
			options.second = "numeric" // "2-digit"
		}
		if (hour12) {
			options.hour12 = true // false
		}

	var container = document.createElement("div");
	container.classList.add("gv-button-container");
	container.classList.add("gv-button-align-" + positionArr[1]);
	ai2htmlEl.appendChild(container);

	if (positionArr[0] == "bottom") {
			mainGraphic.after(container);
	} else {
			mainGraphic.before(container);
	}

		
		var button = document.createElement("button");
		button.classList.add("gv-button");
		button.innerHTML = '<div class="gv-button-inner"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M12.019 22C15.4358 22 18.4654 20.2688 20.2422 17.6492L20.1283 17.0342L19.331 16.5558L18.716 16.7153C17.2354 18.8109 14.8208 20.2005 12.019 20.2005C7.5315 20.2005 3.84129 16.5102 3.84129 11.9772C3.84129 7.46697 7.5315 3.79954 12.019 3.79954C14.593 3.79954 16.8026 4.93849 18.3288 6.76082L15.0258 7.30752L15.0258 8.44647L20.8572 8.44647L21.29 8.01367L21.29 2L20.1739 2L19.6044 5.43963C17.7821 3.32118 15.0941 2 12.019 2C6.48366 2 1.99619 6.46469 1.99619 11.9772C1.99619 17.5353 6.48366 22 12.019 22Z" fill="#ffffff"/></svg><span>Replay</span></div>';

		container.appendChild(button);
		button.disabled = true;
		

		button.addEventListener("click", function(e) {
			if (currentVideo) {
				currentVideo.currentTime = 0;
    				currentVideo.play();
				button.disabled = true;
			}
		});

		var readout = document.createElement("div");
		readout.classList.add("gv-readout");
		var txt = startDateUTC.toLocaleDateString('en-GB', options)	
		readout.innerHTML = "<span class='gv-readout-inner'>" + txt + "</div>";
		container.appendChild(readout);



videos.map(video => {
		video.loop = false;
		let observer = new IntersectionObserver((entries, observer) => {
	
			entries.forEach(entry => {
				const playVideo = entry.intersectionRatio >= 0.75;
			  
				if (playVideo) {
				video.play();
				currentVideo = video;
				} else {
				video.pause();
				}

			});
		}, { threshold: [0, 0.75, 1] });
		observer.observe(video);

		video.addEventListener('ended', function () {
			button.disabled = false;
    		
  		}, false);
})

requestAnimationFrame(update);

function update() {
	if (currentVideo && isPlaying) {
		var videoProgress = currentVideo.currentTime / currentVideo.duration;
		var timeProgress = videoProgress * timeDifference;

		var currentDisplayDate = new Date(startDateUTC.getTime() + timeProgress);


		
		

		var displayText = currentDisplayDate.toLocaleDateString('en-GB', options)
		
		readout.innerHTML = "<span class='gv-readout-inner'>" + displayText + "</div>";
	}

requestAnimationFrame(update);

}
		
</script>